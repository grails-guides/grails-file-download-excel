buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
//tag::buildscriptDependenciesWebdriverBinaries[]
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:$webdriverBinariesVersion"
//end::buildscriptDependenciesWebdriverBinaries[]
    }
}

version "0.1"
group "example.grails"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
//tag::applyPluginWebdriverBinaries[]
apply plugin:"com.energizedwork.webdriver-binaries"
//end::applyPluginWebdriverBinaries[]
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:$hibernateCoreVersion"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"

    //tag::geb[]
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.6.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.6.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.6.0"
    //end::geb[]

    //tag::spreadsheetbuilder[]
    compile "builders.dsl:spreadsheet-builder-poi:$spreadsheetBuilderVersion"
    compile "builders.dsl:spreadsheet-builder-groovy:$spreadsheetBuilderVersion"
    //end::spreadsheetbuilder[]
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

//tag::webdriverBinaries[]
webdriverBinaries {
    chromedriver "${chromeDriverVersion}"
    geckodriver "${geckodriverVersion}"
}
//end::webdriverBinaries[]

//tag::taskWithTypeTest[]
tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env') // <1>
    systemProperty "download.folder", System.getProperty('download.folder') // <2>
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}
//end::taskWithTypeTest[]


assets {
    minifyJs = true
    minifyCss = true
}
